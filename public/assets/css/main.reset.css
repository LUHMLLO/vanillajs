* {
    border: none;
    box-sizing: border-box;
    margin: 0;
    max-width: 100%;
    min-height: 0;
    min-width: 0;
    outline: none;
    padding: 0;
    position: relative;
    -webkit-tap-highlight-color: transparent;
    text-decoration: none;
}

html {
    background-color: var(--clr-background);
    display: contents;
    font-display: swap;
    font-kerning: auto;
    font-family: var(--baseFontFamily);
    font-size: var(--baseFontSize);
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-smooth: always;
    font-style: normal;
    font-variant-ligatures: normal;
    font-optical-sizing: auto;
    font-stretch: normal;
    font-weight: var(--baseFontWeight);
    /* letter-spacing: .0125rem; */
    line-height: var(--baseLineHeight);
    overflow: clip;
    text-align: left;
    text-rendering: optimizeLegibility;
    /* word-spacing: .0625rem; */
}

body {
    background-color: var(--clr-background);
    color: var(--clr-text);
    height: 100dvh;
    overflow-x: clip;
    overflow-y: auto;
    width: 100dvw;

    &#app {
        padding: var(--scale-nm);
    }
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
    display: flex;
}

button,
figure,
img,
toggle,
i {
    user-select: none;
}

a {
    --component-text: var(--clr-accent);

    align-items: center;
    display: inline-flex;
    color: var(--component-text);
    transition: color var(--animProperties);

    &:hover {
        color: color-mix(in srgb, var(--component-text), white 6%);
    }

    &:active {
        color: color-mix(in srgb, var(--component-text), black 9%);
    }
}

/* utility tags */
button,
toggle {
    --component-bg: var(--clr-primary);

    align-items: center;
    border-radius: var(--radius-sm);
    background-color: var(--component-bg);
    color: var(--clr-text);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--scale-sm);
    font-weight: 400;
    gap: var(--scale-sm);
    padding: var(--scale-3xs) var(--scale-sm);
    width: max-content;
    transition: background-color var(--animProperties);

    &:hover {
        background-color: color-mix(in srgb, var(--component-bg), white 3%);
    }

    &:active {
        background-color: color-mix(in srgb, var(--component-bg), black 6%);
    }
}

figure {
    border-radius: var(--radius-3xs);
    overflow: clip;

    >img {
        height: 100%;
        object-fit: cover;
        object-position: center;
        width: 100%;
    }
}

footer,
header,
row {
    display: flex;
    flex-direction: row;
}

column,
section,
subsection {
    display: flex;
    flex-direction: column;
}

grid {
    --gap: var(--scale-nm);
    --minWidth: clamp(18rem, 1vw, 24rem);
    display: grid;
    gap: var(--gap);
    grid-template-columns: 1fr;

    &[max="2"] {
        --max: 2;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--minWidth), calc(100% / var(--max) - var(--gap))), 1fr));
    }

    &[max="3"] {
        --max: 3;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--minWidth), calc(100% / var(--max) - var(--gap))), 1fr));
    }

    &[max="4"] {
        --max: 4;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--minWidth), calc(100% / var(--max) - var(--gap))), 1fr));
    }

    &[demo] {
        grid-auto-rows: 1fr;

        >column {
            outline: dashed 0.125rem var(--clr-primary);
            outline-offset: -0.125rem;
            padding: var(--scale-nm);
            place-items: center center;
            place-content: center center;
        }
    }
}